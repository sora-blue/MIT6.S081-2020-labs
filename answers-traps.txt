1.
Q: Which registers contain arguments to functions? 
For example, which register holds 13 in main's call to printf? 
A: a0-7 & fa0-7 contain arguments to functions.
In main's call to printf, a2 holds 13.

2.
Q: Where is the call to function f in the assembly code for main? 
Where is the call to g? (Hint: the compiler may inline functions.) 
A: The compiler inlines the call to f and the call to g,
so there's nowhere for them to be found.
We can only see "li a1, 12" in main which can be the call to f,
and "addiw	a0,a0,3" in f which can be the call to g.

3.
Q: At what address is the function printf located? 
A: Function printf locates at user va 0x0630(without linking programs).

4.
Q: What value is in the register ra just after the jalr to printf in main? 
A: ra = 0x38.

5.
Run the following code.
	unsigned int i = 0x00646c72;
	printf("H%x Wo%s", 57616, &i);
(1) Q: What is the output?
A: HE110 World
(2) Q: The output depends on that fact that the RISC-V is little-endian. 
If the RISC-V were instead big-endian 
what would you set i to in order to yield the same output? 
Would you need to change 57616 to a different value?
A: i = 0x726c6400.
I don't need to change 57616.

6.
Q: In the following code, what is going to be printed after 'y='? 
(note: the answer is not a specific value.) Why does this happen?
	printf("x=%d y=%d", 3);
A: The value of a2 is going to be printed. 
Because a2 is treated as the third argument of printf by default.

